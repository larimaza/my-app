{"ast":null,"code":"import _defineProperty from\"/Users/lari/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{SET_MATCH,GET_MATCHES,CHANGE_WEATHER}from\"./types\";import initialState from\"./state\";export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_MATCH:{if(!action.payload){return _objectSpread({},state,{isMatchLit:false});}if(state.weather===\"Rain\"&&action.payload){return _objectSpread({},state,{isMatchLit:false,matchCount:0});}if(state.matchCount>0&&!state.isMatchLit){return _objectSpread({},state,{isMatchLit:action.payload,matchCount:state.matchCount-1});}return state;}case GET_MATCHES:{var matchboxLimit=20;var newMatchCount=state.matchCount+action.payload;if(state.weather===\"Rain\"||state.weather===\"Snow\"){return _objectSpread({},state,{matchCount:0});}if(newMatchCount>matchboxLimit){return _objectSpread({},state,{matchCount:20});}return _objectSpread({},state,{matchCount:newMatchCount});}case CHANGE_WEATHER:{if(action.payload===\"Snow\"){return _objectSpread({},state,{isMatchLit:false,matchCount:0,weather:action.payload});}if(action.payload===\"Rain\"){return _objectSpread({},state,{isMatchLit:false,weather:action.payload});}return _objectSpread({},state,{weather:action.payload});}default:return state;}});","map":{"version":3,"sources":["/Users/lari/my-app/src/state/reducer.js"],"names":["SET_MATCH","GET_MATCHES","CHANGE_WEATHER","initialState","state","action","type","payload","isMatchLit","weather","matchCount","matchboxLimit","newMatchCount"],"mappings":"u5BAAA,OAASA,SAAT,CAAoBC,WAApB,CAAiCC,cAAjC,KAAuD,SAAvD,CACA,MAAOC,CAAAA,YAAP,KAAyB,SAAzB,CAEA,eAAe,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBD,YAAyB,IAAXE,CAAAA,MAAW,2CAC/C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,SAAL,CAAgB,CACd,GAAI,CAACK,MAAM,CAACE,OAAZ,CAAqB,CACnB,wBACKH,KADL,EAEEI,UAAU,CAAE,KAFd,GAID,CAED,GAAIJ,KAAK,CAACK,OAAN,GAAkB,MAAlB,EAA4BJ,MAAM,CAACE,OAAvC,CAAgD,CAC9C,wBACKH,KADL,EAEEI,UAAU,CAAE,KAFd,CAGEE,UAAU,CAAE,CAHd,GAKD,CAED,GAAIN,KAAK,CAACM,UAAN,CAAmB,CAAnB,EAAwB,CAACN,KAAK,CAACI,UAAnC,CAA+C,CAC7C,wBACKJ,KADL,EAEEI,UAAU,CAAEH,MAAM,CAACE,OAFrB,CAGEG,UAAU,CAAEN,KAAK,CAACM,UAAN,CAAmB,CAHjC,GAKD,CAED,MAAON,CAAAA,KAAP,CACD,CAED,IAAKH,CAAAA,WAAL,CAAkB,CAChB,GAAMU,CAAAA,aAAa,CAAG,EAAtB,CACA,GAAMC,CAAAA,aAAa,CAAGR,KAAK,CAACM,UAAN,CAAmBL,MAAM,CAACE,OAAhD,CAEA,GAAIH,KAAK,CAACK,OAAN,GAAkB,MAAlB,EAA4BL,KAAK,CAACK,OAAN,GAAkB,MAAlD,CAA0D,CACxD,wBACKL,KADL,EAEEM,UAAU,CAAE,CAFd,GAID,CAED,GAAIE,aAAa,CAAGD,aAApB,CAAmC,CACjC,wBACKP,KADL,EAEEM,UAAU,CAAE,EAFd,GAID,CAED,wBACKN,KADL,EAEEM,UAAU,CAAEE,aAFd,GAID,CAED,IAAKV,CAAAA,cAAL,CAAqB,CACnB,GAAIG,MAAM,CAACE,OAAP,GAAmB,MAAvB,CAA+B,CAC7B,wBACKH,KADL,EAEEI,UAAU,CAAE,KAFd,CAGEE,UAAU,CAAE,CAHd,CAIED,OAAO,CAAEJ,MAAM,CAACE,OAJlB,GAMD,CAED,GAAIF,MAAM,CAACE,OAAP,GAAmB,MAAvB,CAA+B,CAC7B,wBACKH,KADL,EAEEI,UAAU,CAAE,KAFd,CAGEC,OAAO,CAAEJ,MAAM,CAACE,OAHlB,GAKD,CAED,wBACKH,KADL,EAEEK,OAAO,CAAEJ,MAAM,CAACE,OAFlB,GAID,CAED,QACE,MAAOH,CAAAA,KAAP,CA7EJ,CA+ED,CAhFD","sourcesContent":["import { SET_MATCH, GET_MATCHES, CHANGE_WEATHER } from \"./types\";\nimport initialState from \"./state\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_MATCH: {\n      if (!action.payload) {\n        return {\n          ...state,\n          isMatchLit: false\n        };\n      }\n\n      if (state.weather === \"Rain\" && action.payload) {\n        return {\n          ...state,\n          isMatchLit: false,\n          matchCount: 0\n        }\n      }\n\n      if (state.matchCount > 0 && !state.isMatchLit) {\n        return {\n          ...state,\n          isMatchLit: action.payload,\n          matchCount: state.matchCount - 1\n        };\n      }\n\n      return state;\n    }\n\n    case GET_MATCHES: {\n      const matchboxLimit = 20;\n      const newMatchCount = state.matchCount + action.payload;\n\n      if (state.weather === \"Rain\" || state.weather === \"Snow\") {\n        return {\n          ...state,\n          matchCount: 0\n        }\n      }\n\n      if (newMatchCount > matchboxLimit) {\n        return {\n          ...state,\n          matchCount: 20\n        }\n      }\n\n      return {\n        ...state,\n        matchCount: newMatchCount\n      }\n    }\n\n    case CHANGE_WEATHER: {\n      if (action.payload === \"Snow\") {\n        return {\n          ...state,\n          isMatchLit: false,\n          matchCount: 0,\n          weather: action.payload\n        }\n      }\n\n      if (action.payload === \"Rain\") {\n        return {\n          ...state,\n          isMatchLit: false,\n          weather: action.payload\n        }\n      } \n\n      return {\n        ...state,\n        weather: action.payload\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}